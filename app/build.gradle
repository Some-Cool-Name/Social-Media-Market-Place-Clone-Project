plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
}

apply plugin: 'jacoco' //added

android {
    compileSdkVersion 29
    lintOptions {

          abortOnError false

      }

    defaultConfig {
        applicationId "com.example.social_media_market_place_clone_project"
        minSdkVersion 16

        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug { // added
            testCoverageEnabled true
        }



    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

//    added
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }
}
//added

//added

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom( files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom( files("${buildDir}/jacoco/testDebugUnitTest.exec"))
}


dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.squareup.okhttp3:okhttp:4.1.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'com.google.firebase:firebase-database:20.0.0'
    testImplementation 'junit:junit:4.+'
    implementation 'com.squareup.okhttp3:okhttp:3.0.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


// added
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation "org.robolectric:robolectric:4.0.2"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.3.0-beta01'
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.1")
    implementation 'com.cloudinary:cloudinary-android:1.24.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // volley library
    implementation 'com.android.volley:volley:1.1.0'

    // MultiDex
    implementation 'com.android.support:multidex:1.0.3'

    // firebase
    implementation 'com.firebase:firebase-client-android:2.5.2'
    implementation 'com.google.firebase:firebase-database:19.5.0'
    implementation 'com.google.firebase:firebase-auth:19.4.0'
    implementation 'com.daprlabs.aaron:cardstack:0.3.1-beta0'

    implementation 'nl.bryanderidder:themed-toggle-button-group:1.3.1'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.4.30'
    implementation 'com.google.android:flexbox:2.0.1'


}
